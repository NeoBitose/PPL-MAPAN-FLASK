import pandas as pd
import json
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, mean_squared_error

# Dataset

with open('Dataset/data_lengkap.json', 'r') as file:
    data = json.load(file)

# Flattening the dataset
flat_data = []
for item in data:
    for gejala in item['gejala']:
        flat_data.append({'gejala': gejala, 'nama_penyakit': item['nama_penyakit']})

df = pd.DataFrame(flat_data)

# Feature extraction
vectorizer = CountVectorizer()
X = vectorizer.fit_transform(df['gejala'])

# Label encoding
y = df['nama_penyakit']

# Split data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model training
model = KNeighborsClassifier(n_neighbors=3)
model.fit(X_train, y_train)

# Predicting on the test set
y_pred = model.predict(X_test)

# Calculating accuracy
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy:.2f}")

# Calculating loss (using Mean Squared Error as an example)
# First, convert the class labels to numerical values for MSE calculation
y_test_numeric = pd.factorize(y_test)[0]
y_pred_numeric = pd.factorize(y_pred)[0]
mse = mean_squared_error(y_test_numeric, y_pred_numeric)
print(f"Mean Squared Error: {mse:.2f}")

def predict_penyakit_proba(gejala_list):
    gejala_text = ' '.join(gejala_list)
    gejala_vector = vectorizer.transform([gejala_text])
    proba = model.predict_proba(gejala_vector)[0]
    
    # Mapping penyakit dengan probabilitas
    penyakit_proba = {penyakit: prob for penyakit, prob in zip(model.classes_, proba)}
    
    return penyakit_proba

# Contoh penggunaan fungsi prediksi dengan probabilitas
gejala_baru = [
    "Daun menguning sampai jingga dari pucuk",
    "Tanaman menjadi kerdil",
    "Pelepah daun memendek"
]

penyakit_proba = predict_penyakit_proba(gejala_baru)
print(penyakit_proba)

print("Probabilitas masing-masing penyakit:")
for penyakit, prob in penyakit_proba.items():
    print(f"{penyakit}: {prob:.2f}")
